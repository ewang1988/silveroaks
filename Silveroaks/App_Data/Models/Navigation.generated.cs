//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1074 with alias "navigation"
	/// <summary>Navigation & SEO</summary>
	public partial interface INavigation : IPublishedContent
	{
		/// <summary>Meta Description</summary>
		string MetaDescription { get; }

		/// <summary>Meta tags</summary>
		string MetaTags { get; }

		/// <summary>Page Title</summary>
		string PageTitle { get; }

		/// <summary>Show this page</summary>
		bool PageVisible { get; }
	}

	/// <summary>Navigation & SEO</summary>
	[PublishedContentModel("navigation")]
	public partial class Navigation : PublishedContentModel, INavigation
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "navigation";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Navigation(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Navigation, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Meta Description: The meta description is what appears together with your site's name on a google search. It appears below the site name, recommended length is 130 words
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return GetMetaDescription(this); }
		}

		/// <summary>Static getter for Meta Description</summary>
		public static string GetMetaDescription(INavigation that) { return that.GetPropertyValue<string>("metaDescription"); }

		///<summary>
		/// Meta tags: Comma separated list that describes what your site is about. Modern browsers ignore this so it is not required. Could still do some good when included though
		///</summary>
		[ImplementPropertyType("metaTags")]
		public string MetaTags
		{
			get { return GetMetaTags(this); }
		}

		/// <summary>Static getter for Meta tags</summary>
		public static string GetMetaTags(INavigation that) { return that.GetPropertyValue<string>("metaTags"); }

		///<summary>
		/// Page Title: The Page title is what you see in the browser's tab when you are on a page
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return GetPageTitle(this); }
		}

		/// <summary>Static getter for Page Title</summary>
		public static string GetPageTitle(INavigation that) { return that.GetPropertyValue<string>("pageTitle"); }

		///<summary>
		/// Show this page: Shows this page in the top navigation bar
		///</summary>
		[ImplementPropertyType("pageVisible")]
		public bool PageVisible
		{
			get { return GetPageVisible(this); }
		}

		/// <summary>Static getter for Show this page</summary>
		public static bool GetPageVisible(INavigation that) { return that.GetPropertyValue<bool>("pageVisible"); }
	}
}
